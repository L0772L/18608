CHIP Counter {
    IN inc, reset;
    OUT A, B, C, D;

    PARTS:
    // 4个bit的独立寄存器
    Register(in=nextA, out=Areg, load=true);
    Register(in=nextB, out=Breg, load=true);
    Register(in=nextC, out=Creg, load=true);
    Register(in=nextD, out=Dreg, load=true);

    // 提取输出
    And(a=Areg, b=true, out=A);
    And(a=Breg, b=true, out=B);
    And(a=Creg, b=true, out=C);
    And(a=Dreg, b=true, out=D);

    // 加法器逻辑（只实现简单的低位加法 + 清零）
    // 高位进位你可以再加，这里演示最低有效位

    // 第一位 D 翻转（D = D xor inc）
    Xor(a=Dreg, b=inc, out=Dx);
    Mux(a=Dx, b=false, sel=reset, out=nextD);

    // 其它位：本例中保持 0，或你可添加完整加法器
    Mux(a=Breg, b=false, sel=reset, out=nextB);
    Mux(a=Creg, b=false, sel=reset, out=nextC);
    Mux(a=Areg, b=false, sel=reset, out=nextA);
}

